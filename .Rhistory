r <- lista[['coverage']][which(lista[['distancia']] == dmin)]
r
}
db.salud <- db.salud |>
mutate(cobertura_km = map_chr(resultado,  ~ paste(xd(.x, min(.x$distancia)), collapse = " ")))
func.cov <- function(lista, dmin){
r <- lista[['coverage']][which(lista[['distancia']] == dmin)]
result <- any(sapply(r, function(x) x> dmin))
result
}
db.salud <- db.salud |>
mutate(posible_cobertura = map_chr(resultado,  ~ paste(func.cov(.x, min(.x$distancia)), collapse = " ")))
View(db.salud)
View(db.salud[[47]][[1]])
func.tec <- function(lista, dmin){
r <- lista[['tecnologia']][which(lista[['distancia']] == dmin)]
r
}
db.salud <- db.salud |>
mutate(tecnologias = map_chr(resultado,  ~ paste(func.tec(.x, min(.x$distancia)), collapse = " ")))
library(tidyverse)
library(dplyr)
library(readxl)
library(here)
library(writexl)
library(stringr)
library(purrr)
library(geosphere)
library(magrittr) # to use extract
#________Data_________
rbs.conecel <- read_excel('ResultGeoTOTAL/dbconecel.xlsx')
rbs.otecel <- read_excel('ResultGeoTOTAL/dbotecel.xlsx')
db.salud <- read_excel('establecimientos/saludFiltrada.xlsx')
#------------WRANGLING----------------------
# FUNCTION to detect min coverage
calculo.cobertura <- function(db1, lon2, lat2){
wi <- apply(db1, 1, function(x){
lon1 <- as.numeric(x[['LONGITUD']])
lat1 <- as.numeric(x[['LATITUD']])
# Define lon2 and lat2 inside the function to create vectors
lon2 <- as.numeric(lon2)
lat2 <- as.numeric(lat2)
# Calculate distance
t <- distHaversine(c(lon1, lat1), c(lon2, lat2))
t <- t / 1000
lista <- list(coverage = x[['coverage']], distancia=t, tecnologia = x[['TECNOLOGIA']])
lista
})
wi
}
func.informacion <- function(LONGITUD, LATITUD){
listas.cal <- calculo.cobertura(rbs.conecel, LONGITUD, LATITUD)
min_distancia <- min(sapply(listas.cal, function(x) x$distancia))
indice <- which(sapply(listas.cal, function(x) x$distancia) == min_distancia)
lista_min_distancia <- listas.cal[[indice[1]]]
lista_min_distancia
}
func.informacion2 <- function(db1, LONGITUD, LATITUD){
listas.cal <- calculo.cobertura(db1, LONGITUD, LATITUD)
cobertura_tibble <- bind_rows(map(listas.cal, as_tibble))
cobertura_tibble
}
db.salud <- db.salud |>
rowwise() |>
mutate(resultado = list(func.informacion2(rbs.conecel, LONGITUD, LATITUD))) |>
ungroup()
db.salud <- db.salud |>
mutate(distancia_min_km = map_dbl(resultado, ~ min(.x$distancia)))
xd <- function(lista, dmin){
r <- lista[['coverage']][which(lista[['distancia']] == dmin)]
r
}
db.salud <- db.salud |>
mutate(cobertura_km = map_chr(resultado,  ~ paste(xd(.x, min(.x$distancia)), collapse = " ")))
func.cov <- function(lista, dmin){
r <- lista[['coverage']][which(lista[['distancia']] == dmin)]
result <- any(sapply(r, function(x) x> dmin))
result
}
db.salud <- db.salud |>
mutate(posible_cobertura = map_chr(resultado,  ~ paste(func.cov(.x, min(.x$distancia)), collapse = " ")))
func.tec <- function(lista, dmin){
r <- lista[['tecnologia']][which(lista[['distancia']] == dmin)]
r
}
db.salud <- db.salud |>
mutate(tecnologias = map_chr(resultado,  ~ paste(func.tec(.x, min(.x$distancia)), collapse = " ")))
l1 <- (1,2,3)
l1 <- list(1,2,3)
l2 <- list('gsm', 'umt', 'lte')
map2_chr(l1, l2 ~ paste(.x, "y tecnología", .y))
map2_chr(l1, l2, function(x, y) paste(x, "y tecnología", y))
l1
result <- map2_chr(l1, l2, function(x, y) paste(x, "y tecnología", y))
result
l1 <- list(1,2,3)
l2 <- list('gsm', 'umt', 'lte')
result1 <- map2_chr(l1, l2, function(x, y) paste(x, "y tecnología", y))
result1
r_min <- 1.5
l1 <- list(1,2,3)
l2 <- list('gsm', 'umt', 'lte')
result1 <- map2_chr(l1, l2, function(.x, .y) paste(.x, "y tecnología", .y))
result1
result2 <- map2_chr(l1, l2, function(.x, .y) {
any(
.x > r_min & .y != 'gsm'
)
})
result2
result2 <- map2_chr(l1, l2, function(.x, .y) {
(.x > r_min & .y != 'gsm')
})
result2
any(result2)
result2 <- map2_lgl(l1, l2, function(.x, .y) {
(.x > r_min & .y != 'gsm')
})
result2
result2 <- map2_lgl(l1, l2, function(.x, .y) {
any(.x > r_min & .y != 'gsm')
})
result2
result2 <- map2_lgl(l1, l2, function(.x, .y) {
(.x > r_min & .y != 'gsm')
})
any(result2)
r_min <- 4.5
l1 <- list(1,2,3)
l2 <- list('gsm', 'umt', 'lte')
result1 <- map2_chr(l1, l2, function(.x, .y) paste(.x, "y tecnología", .y))
result1
result2 <- map2_lgl(l1, l2, function(.x, .y) {
(.x > r_min & .y != 'gsm')
})
any(result2)
r_min <- 1.5
l1 <- list(1,2,3)
l2 <- list('gsm', 'gsm', 'lte')
result1 <- map2_chr(l1, l2, function(.x, .y) paste(.x, "y tecnología", .y))
result1
result2 <- map2_lgl(l1, l2, function(.x, .y) {
(.x > r_min & .y != 'gsm')
})
any(result2)
r_min <- 1.5
l1 <- list(1,2,3)
l2 <- list('gsm', 'gsm', 'gsm')
result1 <- map2_chr(l1, l2, function(.x, .y) paste(.x, "y tecnología", .y))
result1
result2 <- map2_lgl(l1, l2, function(.x, .y) {
(.x > r_min & .y != 'gsm')
})
any(result2)
View(db.salud)
fun.dat.movi <- function(lista, dmin){
c <- lista[['coverage']][which(lista[['distancia']] == dmin)]
t <- lista[['tecnologia']][which(lista[['distancia']] == dmin)]
result <- map2_lgl(c, t, function(.x, .y) {
(.x > dmin & .y != 'gsm')
})
result.final <- any(result)
}
db.salud <- db.salud |>
mutate(datos_moviles = map_chr(resultado, ~ paste(fun.dat.movi(.x, min(.x$distancia)), collapse = " ")))
source("C:/Users/bravi/projects/expansionSMAr/coberturaSalud/coberturaClaro2.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/coberturaSalud/coberturaClaro2.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/coberturaSalud/coberturaClaro2.R", echo=TRUE)
db.salud.claro <- db.salud.claro |>
mutate(distancia_min_km = map_dbl(resultado, ~ min(.x$distancia)))
db.salud.claro <- db.salud.claro |>
mutate(cobertura_km = map_chr(resultado,  ~ paste(func.cobertura_km(.x, min(.x$distancia)), collapse = " ")))
db.salud <- db.salud |>
mutate(posible_cobertura = map_chr(resultado,  ~ paste(func.cov(.x, min(.x$distancia)), collapse = " ")))
db.salud.claro <- db.salud.claro |>
mutate(posible_cobertura = map_chr(resultado,  ~ paste(func.cov(.x, min(.x$distancia)), collapse = " ")))
db.salud.claro <- db.salud.claro |>
mutate(posible_cobertura = map_chr(resultado,  ~ paste(func.cov(.x, min(.x$distancia)), collapse = " ")))
db.salud.claro <- db.salud.claro |>
mutate(tecnologias = map_chr(resultado,  ~ paste(func.tec(.x, min(.x$distancia)), collapse = " ")))
db.salud.claro <- db.salud.claro |>
mutate(datos_moviles = map_chr(resultado, ~ paste(fun.dat.movi(.x, min(.x$distancia)), collapse = " ")))
View(db.salud.claro)
#Export tibble with companies classified
writexl::write_xlsx(db.salud.claro, 'coberturaSalud/saludCONECELCobertura2.xlsx')
View(db.salud.claro)
View(db.salud.claro)
source("C:/Users/bravi/projects/expansionSMAr/coberturaSalud/coberturaMovi2.R", echo=TRUE)
View(db.salud.movi)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
library(tidyverse)
library(dplyr)
library(readxl)
library(here)
library(writexl)
library(stringr)
library(purrr)
library(geosphere)
library(magrittr) # to use extract
source(here::here('helpers/cobertura_detection.R'))
#________Data_________
rbs.otecel <- read_excel('ResultGeoTOTAL/dbotecel.xlsx')
db.edu.movi <- read_excel('establecimientos/educaciónOtecel.xlsx')
db.edu.movi <- db.edu.movi[1:4,]
View(db.edu.movi)
# compare with CONECEL rbs
## OJO ungroup() is very important
db.edu.movi <- db.edu.movi |>
rowwise() |>
mutate(resultado = list(func.informacion2(rbs.otecel, LONGITUD, LATITUD))) |>
ungroup()
db.edu.movi <- db.edu.movi |>
mutate(distancia_min_km = map_dbl(resultado, ~ min(.x$distancia)))
db.edu.movi <- db.edu.movi |>
mutate(cobertura_km = map_chr(resultado,  ~ paste(func.cobertura_km(.x, min(.x$distancia)), collapse = " ")))
db.edu.movi <- db.edu.movi |>
mutate(posible_cobertura = map_chr(resultado,  ~ paste(func.cov(.x, min(.x$distancia)), collapse = " ")))
db.edu.movi <- db.edu.movi |>
mutate(tecnologias = map_chr(resultado,  ~ paste(func.tec(.x, min(.x$distancia)), collapse = " ")))
db.edu.movi <- db.edu.movi |>
mutate(datos_moviles = map_chr(resultado, ~ paste(fun.dat.movi(.x, min(.x$distancia)), collapse = " ")))
#Export tibble with companies classified
writexl::write_xlsx(db.edu.movi, 'coberturaEducación/educaciónOTECELCobertura2.xlsx')
View(db.edu.movi)
View(db.edu.movi[[33]][[2]])
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
View(db.edu.movi)
View(db.edu.movi[[33]][[2]])
source("C:/Users/bravi/projects/expansionSMAr/testScrips/veamos2.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
View(db.edu.movi)
View(db.edu.movi[[33]][[2]])
View(db.edu.movi[[33]][[3]])
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/coberturaSalud/coberturaMovi2.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/coberturaSalud/coberturaMovi2.R", echo=TRUE)
View(db.edu.movi)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
View(db.edu.movi)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
View(db.edu.movi[[33]][[1]])
View(db.edu.movi[[33]][[4]])
class(db.edu.movi[[33]][[4]]$coverage)
class(db.edu.movi[[33]][[4]]$distancia)
class(db.edu.movi[[33]][[4]]$coverage)
class(db.edu.movi[[33]][[3]]$coverage)
class(db.edu.movi[[33]][[2]]$coverage)
class(db.edu.movi[[33]][[1]]$coverage)
source("C:/Users/bravi/projects/expansionSMAr/testScrips/veamos2.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
View(db.edu.movi)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
View(db.edu.movi)
library(tidyverse)
library(dplyr)
library(readxl)
library(here)
library(writexl)
library(stringr)
library(purrr)
library(geosphere)
library(magrittr) # to use extract
source(here::here('helpers/cobertura_detection.R'))
#________Data_________
rbs.otecel <- read_excel('ResultGeoTOTAL/dbotecel.xlsx')
db.edu.movi <- read_excel('establecimientos/educaciónOtecel.xlsx')
db.edu.movi <- db.edu.movi[1:15,]
View(db.edu.movi)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
View(db.edu.movi)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
View(db.edu.movi)
source("C:/Users/bravi/projects/expansionSMAr/coberturaSalud/coberturaSaludMovi2.R", echo=TRUE)
View(db.salud.movi)
source("C:/Users/bravi/projects/expansionSMAr/coberturaSalud/coberturaSaludClaro2.R", echo=TRUE)
View(db.salud.claro)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
library(tidyverse)
library(dplyr)
library(readxl)
library(here)
library(writexl)
library(stringr)
library(purrr)
library(geosphere)
library(magrittr) # to use extract
source(here::here('helpers/cobertura_detection.R'))
#________Data_________
rbs.otecel <- read_excel('ResultGeoTOTAL/dbotecel.xlsx')
db.edu.movi <- read_excel('establecimientos/educaciónOtecel.xlsx')
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduMovi2.R", echo=TRUE)
View(db.edu.movi)
source("C:/Users/bravi/projects/expansionSMAr/coberturaEducación/coberturaEduClaro2.R", echo=TRUE)
library(tidyverse)
library(dplyr)
library(readxl)
library(here)
library(writexl)
library(stringr)
library(stringi) # to remove accents
source(here::here('costeo/costosUnidad.R'))
#---Data----
db.fibra.claro <- read_excel('nodos_fibra/nodos_fibra_conecel.xlsx')
db.edu.claro <- read_excel('coberturaEducación/educaciónCONECELCobertur2.xlsx')
db.fibra.claro <- read_excel('nodos_fibra/nodos_fibra_conecel.xlsx')
db.edu.claro <- read_excel('coberturaEducación/educaciónCONECELCobertura2.xlsx')
library(tidyverse)
library(dplyr)
library(readxl)
library(here)
library(writexl)
library(stringr)
library(stringi) # to remove accents
source(here::here('costeo/costosUnidad.R'))
#---Data----
db.fibra.claro <- read_excel('nodos_fibra/nodos_fibra_conecel.xlsx')
db.edu.claro <- read_excel('coberturaEducación/educaciónCONECELCobertura2.xlsx')
db.fibra.claro <- db.fibra.claro |> group_by(cantón) |>
distinct()
class(db.fibra.claro)
# all strings in UPPER CASE
db.fibra.claro <- db.fibra.claro |>
mutate(
cantón = toupper(cantón)
)
db.edu.claro <- db.edu.claro |>
mutate(
DPA_DESCAN = toupper(DPA_DESCAN)
)
# all strings without accents
db.fibra.claro <- db.fibra.claro |>
mutate(
cantón = stri_trans_general(cantón, "Latin-ASCII")
)
db.edu.claro <- db.edu.claro |>
mutate(
DPA_DESCAN = stri_trans_general(DPA_DESCAN, "Latin-ASCII")
)
# all strings without extra spaces
db.fibra.claro <- db.fibra.claro |>
mutate(
cantón = str_squish(cantón)
)
db.edu.claro <- db.edu.claro |>
mutate(
DPA_DESCAN = str_squish(DPA_DESCAN)
)
# looking for schools where are part of an cantón where there are fiber
join_places_fiber <- function(x, y){
ifelse(x[['DPA_DESCAN']] == y[['cantón']],1,0)
}
matrix.fibra <- apply(db.edu.claro, 1, join_places_fiber, y = db.fibra.claro)
col.fibra <- apply(matrix.fibra, 2, sum)
db.edu.claro$acceso_fibra <- col.fibra
View(db.edu.claro)
# order base schools Claro in descendent order
db.edu.claro <- db.edu.claro[order(-db.edu.claro$distancia_min_km),]
col.fases <- c(
rep("Fase 1", times = 702),
rep("Fase 2", times = 703),
rep("Fase 3", times = 703),
rep("Fase 4", times = 703)
)
db.edu.claro$fases <- col.fases
class(db.edu.claro$datos_moviles)
as.logical(db.edu.claro$datos_moviles)
as.logical(db.edu.claro$datos_moviles[2811])
db.edu.claro$datos_moviles <- as.logical(db.edu.claro$datos_moviles)
db.edu.claro <- db.edu.claro |>
mutate(costeo = ifelse(datos_moviles, 0,
ifelse(acceso_fibra == 1 & distancia_min_km < 1,
fibkm.min.15*distancia_min_km, plan40gb.15)))
sum(db.edu.claro$costeo)
#Export tibble with companies classified
writexl::write_xlsx(db.edu.claro, 'costeo/educaciónConecelCosteado.xlsx')
source("C:/Users/bravi/projects/expansionSMAr/costeo/EduClaroCosteo.R", echo=TRUE)
db.edu.claro <- db.edu.claro |>
mutate(costeo_20 = ifelse(datos_moviles, 0,
ifelse(acceso_fibra == 1 & distancia_min_km < 1,
fibkm.min.20*distancia_min_km, plan40gb.20)))
sum(db.edu.claro$costeo_15)
sum(db.edu.claro$costeo_20)
#Export tibble with companies classified
writexl::write_xlsx(db.edu.claro, 'costeo/educaciónConecelCosteado.xlsx')
library(tidyverse)
library(dplyr)
library(readxl)
library(here)
library(writexl)
library(stringr)
library(stringi) # to remove accents
source(here::here('costeo/costosUnidad.R'))
#---Data----
db.fibra.movi <- read_excel('nodos_fibra/nodos_fibra_otecel.xlsx')
db.edu.movi <- read_excel('coberturaEducación/educaciónOTECELCobertura2.xlsx')
db.fibra.movi <- db.fibra.movi |> group_by(cantón) |>
distinct()
class(db.fibra.movi)
# all strings in UPPER CASE
db.fibra.movi <- db.fibra.movi |>
mutate(
cantón = toupper(cantón)
)
db.edu.movi <- db.edu.movi |>
mutate(
DPA_DESCAN = toupper(DPA_DESCAN)
)
# all strings without accents
db.fibra.movi <- db.fibra.movi |>
mutate(
cantón = stri_trans_general(cantón, "Latin-ASCII")
)
db.edu.movi <- db.edu.movi |>
mutate(
DPA_DESCAN = stri_trans_general(DPA_DESCAN, "Latin-ASCII")
)
# all strings without extra spaces
db.fibra.movi <- db.fibra.movi |>
mutate(
cantón = str_squish(cantón)
)
db.edu.movi <- db.edu.movi |>
mutate(
DPA_DESCAN = str_squish(DPA_DESCAN)
)
# looking for schools where are part of an cantón where there are fiber
join_places_fiber <- function(x, y){
ifelse(x[['DPA_DESCAN']] == y[['cantón']],1,0)
}
matrix.fibra <- apply(db.edu.movi, 1, join_places_fiber, y = db.fibra.movi)
col.fibra <- apply(matrix.fibra, 2, sum)
db.edu.movi$acceso_fibra <- col.fibra
# order base schools Claro in descendent order
db.edu.movi <- db.edu.movi[order(-db.edu.movi$distancia_min_km),]
col.fases <- c(
rep("Fase 1", times = 676),
rep("Fase 2", times = 675),
rep("Fase 3", times = 675),
rep("Fase 4", times = 675)
)
db.edu.movi$fases <- col.fases
db.edu.movi$datos_moviles <- as.logical(db.edu.movi$datos_moviles)
source("C:/Users/bravi/projects/expansionSMAr/costeo/EduMoviCosteo.R", echo=TRUE)
View(db.edu.movi)
library(tidyverse)
library(dplyr)
library(readxl)
library(here)
library(writexl)
library(stringr)
library(stringi) # to remove accents
source(here::here('costeo/costosUnidad.R'))
#---Data----
db.fibra.claro <- read_excel('nodos_fibra/nodos_fibra_conecel.xlsx')
db.salud.claro <- read_excel('coberturaSalud/saludCONECELCobertura2.xlsx')
db.fibra.claro <- db.fibra.claro |> group_by(cantón) |>
distinct()
class(db.fibra.claro)
# all strings in UPPER CASE
db.fibra.claro <- db.fibra.claro |>
mutate(
cantón = toupper(cantón)
)
db.salud.claro <- db.salud.claro |>
mutate(
CAN_DESC = toupper(CAN_DESC)
)
# all strings without accents
db.fibra.claro <- db.fibra.claro |>
mutate(
cantón = stri_trans_general(cantón, "Latin-ASCII")
)
db.salud.claro <- db.salud.claro |>
mutate(
CAN_DESC = stri_trans_general(CAN_DESC, "Latin-ASCII")
)
# all strings without extra spaces
db.fibra.claro <- db.fibra.claro |>
mutate(
cantón = str_squish(cantón)
)
db.salud.claro <- db.salud.claro |>
mutate(
CAN_DESC = str_squish(CAN_DESC)
)
# looking for schools where are part of an cantón where there are fiber
join_places_fiber <- function(x, y){
ifelse(x[['CAN_DESC']] == y[['cantón']],1,0)
}
matrix.fibra <- apply(db.salud.claro, 1, join_places_fiber, y = db.fibra.claro)
col.fibra.s <- apply(matrix.fibra, 2, sum)
db.salud.claro$acceso_fibra <- col.fibra.s
db.salud.claro <- db.salud.claro[order(-db.salud.claro$distancia_min_km),]
col.fases.s <- c(
rep("Fase 1", times = 7)
)
db.salud.claro$fases <- col.fases.s
source("C:/Users/bravi/projects/expansionSMAr/costeo/SaludClaroCosteo.R", echo=TRUE)
View(db.salud.claro)
View(db.salud.claro)
source("C:/Users/bravi/projects/expansionSMAr/costeo/SaludMoviCosteo.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/costeo/SaludMoviCosteo.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/costeo/SaludMoviCosteo.R", echo=TRUE)
View(db.salud.movi)
View(db.fibra.movi)
source("C:/Users/bravi/projects/expansionSMAr/costeo/EduClaroCosteo.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/costeo/SaludClaroCosteo.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/costeo/EduMoviCosteo.R", echo=TRUE)
source("C:/Users/bravi/projects/expansionSMAr/costeo/SaludMoviCosteo.R", echo=TRUE)
